# Use root/example as user/password credentials
version: '3.9'

services:

  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/data/db
    ports:
      - "${DB_PORT}:27017"
    networks:
      - my_network

  backend:
    depends_on:
      - db
    build:
      context: .
      dockerfile: prod.Dockerfile
    environment:
      - DEV_PLATFORM=DOCKER
      - NODE_ENV=${NODE_ENV}
    volumes:
      - ./envs:/app/envs
    command: node dist/src/index.js
#    command: tail -f /dev/null
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 512m
          cpus: '0.25'
        reservations:
          cpus: '0.1'
    networks:
      - my_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - my_network

volumes:
  db_data:
networks:
  my_network:
    name: prod_network



#
#All VUs finished. Total time: 21 seconds
#
#  --------------------------------
#  Summary report @ 02:25:21(+0300)
#  --------------------------------
#
#errors.ETIMEDOUT: .............................................................. 46
#http.codes.201: ................................................................ 54
#http.downloaded_bytes: ......................................................... 12420
#http.request_rate: ............................................................. 7/sec
#http.requests: ................................................................. 100
#http.response_time:
#  min: ......................................................................... 1630
#  max: ......................................................................... 9999
#  mean: ........................................................................ 6011.2
#  median: ...................................................................... 5944.6
#  p95: ......................................................................... 9416.8
#  p99: ......................................................................... 9801.2
#http.responses: ................................................................ 54
#vusers.completed: .............................................................. 54
#vusers.created: ................................................................ 100
#vusers.created_by_name.user registration: ...................................... 100
#vusers.failed: ................................................................. 46
#vusers.session_length:
#  min: ......................................................................... 1668.4
#  max: ......................................................................... 10003.9
#  mean: ........................................................................ 6024.9
#  median: ...................................................................... 5944.6
#  p95: ......................................................................... 9416.8
#  p99: ......................................................................... 9801.2
#  / drop database

#  $ NODE_ENV=staging artillery run tests/performance/groups-performance-test.yml

#  docker-compose -f docker-compose.prod.yml --env-file=docker.env.stag up -d
